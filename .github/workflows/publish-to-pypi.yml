# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://github.com/pypa/gh-action-pypi-publish#trusted-publishing

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest, macos-14]
        include:
          # - os: windows-latest
          #   python: 39
          #   platform_id: win_amd64
          - os: windows-latest
            python: 310
            platform_id: win_amd64
          # - os: windows-latest
          #   python: 311
          #   platform_id: win_amd64
          # - os: windows-latest
          #   python: 312
          #   platform_id: win_amd64

          # Linux 64 bit manylinux2014
          # - os: ubuntu-latest
          #   python: 39
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python: 311
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python: 312
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014

          # MacOS x86_64
          # - os: macos-latest
          #   python: 39
          #   platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64
          # - os: macos-latest
          #   python: 311
          #   platform_id: macosx_x86_64
          # - os: macos-latest
          #   python: 312
          #   platform_id: macosx_x86_64

          # MacOS arm64
          # - os: macos-14
          #   python: 39
          #   platform_id: macosx_arm64
          - os: macos-14
            python: 310
            platform_id: macosx_arm64
          # - os: macos-14
          #   python: 311
          #   platform_id: macosx_arm64
          # - os: macos-14
          #   python: 312
          #   platform_id: macosx_arm64

    steps:
      - name: Checkout LePhare
        uses: actions/checkout@v4

      - name: Attempt to install XCode version
        uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos-14'
        with:
          xcode-version: '15.1'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          # CIBW_ARCHS_MACOS: auto universal2
          CIBW_BEFORE_BUILD: git submodule update --init --recursive
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BEFORE_ALL_MACOS: brew install libomp

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Optional, use if you use setuptools_scm
        submodules: true  # Optional, use if you have submodules

    - name: Build SDist
      run: pipx run build --sdist

    - name: Upload SDist
      uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  upload_pypi:
    name: Upload to test-pypi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: test-pypi
    permissions:
      id-token: write
    # if: github.event_name == 'release' && github.event.action == 'published'
    # # or, alternatively, urpload to PyPI on evey tag starting with 'v' (remove on: release above to use this)
    # # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/