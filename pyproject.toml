[project]
name = "lephare"
license = {file = "LICENSE"}
readme = "README.md"
description = "LEPHARE photometric redshift estimator"
authors = [
    { name = "StÃ©phane Arnouts", email = "stephane.arnouts@lam.fr" },
    { name = "Olivier Ilbert", email = "olivier.ilbert@lam.fr" },
    { name = "Johann Cohen-Tanugi", email = "johann.cohen-tanugi@in2p3.fr" },
    { name = "Raphael Shirley", email = "rshirley@mpe.mpg.de" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
    "matplotlib",
    "numpy",
    "astropy",
    "scipy",
    "requests",
    "pooch",
    "platformdirs",
]

[project.scripts]
filter = "lephare.filter:main"
sedtolib = "lephare.sedtolib:main"
mag_gal = "lephare.mag_gal:main"
zphota = "lephare.zphota:main"

[project.urls]
"Source Code" = "https://github.com/lincc-frameworks/lephare"

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "jupyter", # Clears output from Jupyter notebooks
    "pre-commit", # Used to run checks before finalizing a git commit
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "ruff", # Used for static linting of files
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
    "pybind11>=2.11", # Used to create Python bindings for C++ code
    "cmake", # Used to build C++ code
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/lephare/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.black]
line-length = 110
target-version = ["py39"]
extend-exclude = '''examples/.*'''

[tool.isort]
profile = "black"
line_length = 110
skip_glob = ["examples/*"]

[tool.ruff]
line-length = 110
target-version = "py39"
exclude = ["examples/*", "setup.py"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # docstrings
    "D106",
    "D206",
    "D207",
    "D208",
    "D300",
    "D417",
    "D419",
]

ignore = [
    "D101", # Allow public classes without docstrings
    "D102", # Allow public functions without docstrings
    "D103", # Allow public functions without docstrings
    "UP006", # Allow non standard library generics in type hints
    "UP007", # Allow Union in type hints
    "SIM114", # Allow if with same arms
    "B028", # Allow default warning level
    "SIM117", # Allow nested with
    "UP015", # Allow redundant open parameters
    "UP028", # Allow yield in for loop
]
exclude = ["examples/*", "setup.py"]

[tool.coverage.run]
omit=["src/lephare/_version.py"]
